# web service1 config.
server {
    listen 80;
    listen 443 ssl http2;
    server_name site1.test;

    # Path for SSL config/key/certificate
    # ssl cung cấp bảo mật giửa web server và client 
    # SSl với private key: code đã encode, public key: khóa dùng để decode private key
    
    # Tạo file pem từ key
    # openssl req -x509 -new -nodes -key {ten_file.key} -sha256 -days 1825 -out {ten_file.pem}

    # openssl req -new -newkey rsa:2048 -nodes -keyout example_com.key -out example_com.csr
    # openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365

    # tạo file bt: openssl genrsa -out {ten_file}.key {do_dai_key}
    # Ex: openssl genrsa -out cert.key 2048
    ssl_certificate /etc/ssl/certs/nginx/site1.crt;
    ssl_certificate_key /etc/ssl/certs/nginx/site1.key;
    include /etc/nginx/includes/ssl.conf;

    location / {
        include /etc/nginx/includes/proxy.conf;
        # proxy_pass sẽ gửi request tới một proxy server cụ thể.
        # ở đây sẽ gửi tới docker có name là ex1_app_1 https://topdev.vn/blog/nginx-la-gi/
        proxy_pass http://ex1_app_1;
    }

    access_log off;
    error_log  /var/log/nginx/error.log error;
}

    # web service2 config.
server {
    listen 80;
    listen 443 ssl http2;
    server_name site2.test;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/ssl/certs/nginx/site2.crt;
    ssl_certificate_key /etc/ssl/certs/nginx/site2.key;
    include /etc/nginx/includes/ssl.conf;

    location / {
        include /etc/nginx/includes/proxy.conf;
        proxy_pass http://ex2_app_1;
    }

    access_log off;
        error_log  /var/log/nginx/error.log error;
    }

# Default
server {
    listen 80 default_server;

    server_name _;
    root /var/www/html;

    charset UTF-8;

    error_page 404 /backend-not-found.html;
    location = /backend-not-found.html {
        allow   all;
    }
    location / {
        return 404;
    }

    access_log off;
    log_not_found off;
    error_log  /var/log/nginx/error.log error;
}